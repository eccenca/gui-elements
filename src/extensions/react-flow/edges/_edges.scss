.react-flow__edge {
    --#{$eccgui}-reactflow-node-color-default: #{$reactflow-edge-stroke-color-default};
    --#{$eccgui}-reactflow-node-color-hover: #{$reactflow-edge-stroke-color-hover};
    --#{$eccgui}-reactflow-node-color-selected: #{$reactflow-edge-stroke-color-selected};

    color: var(--#{$eccgui}-reactflow-node-color-default);

    // stroke: var(--#{$eccgui}-reactflow-node-color-default); // removed, probably not necessary

    path[class*="react-flow__edge"],
    rect[class*="react-flow__edge"] {
        stroke-opacity: $reactflow-edge-stroke-opacity-default;
        shape-rendering: geometricprecision;
    }

    text[class*="react-flow__edge"] {
        opacity: $reactflow-edge-stroke-opacity-default;
    }

    .react-flow__edge-textbg {
        stroke: currentcolor;
    }

    &:hover {
        color: var(--#{$eccgui}-reactflow-node-color-hover);

        // stroke: var(--#{$eccgui}-reactflow-node-color-hover); // removed, probably not necessary

        path[class*="react-flow__edge"],
        rect[class*="react-flow__edge"] {
            stroke-opacity: $reactflow-edge-stroke-opacity-hover;
        }

        text[class*="react-flow__edge"] {
            opacity: $reactflow-edge-stroke-opacity-hover;
        }
    }

    &.selected {
        color: var(--#{$eccgui}-reactflow-node-color-selected);
        stroke: var(--#{$eccgui}-reactflow-node-color-selected);

        path[class*="react-flow__edge"],
        rect[class*="react-flow__edge"] {
            stroke-opacity: $reactflow-edge-stroke-opacity-selected;
        }

        text[class*="react-flow__edge"] {
            opacity: $reactflow-edge-stroke-opacity-selected;
        }
    }

    &.selected,
    &:focus,
    &:focus-visible {
        outline: none;
    }
}

path.react-flow__edge-path {
    stroke: currentcolor;
    stroke-opacity: $reactflow-edge-stroke-opacity-default;
    stroke-width: 2;

    .react-flow__edge.selected & {
        stroke: currentcolor;
        stroke-width: 2;
    }
}

path.react-flow__edge-interaction {
    fill: none;
    stroke: currentcolor;
    stroke-linecap: round;

    .react-flow__edge & {
        stroke-opacity: 0;
    }

    .react-flow__edge:hover & {
        stroke-opacity: $reactflow-edge-stroke-opacity-hover * 0.2;
    }

    .react-flow__edge.selected & {
        stroke-opacity: $reactflow-edge-stroke-opacity-selected * 0.2;
    }
}

path.react-flow__edge-path-glow {
    fill: none;
    stroke: currentcolor;
    stroke-linecap: round;

    .react-flow__edge & {
        stroke-opacity: 0;
    }

    .react-flow__edge:hover & {
        stroke-opacity: $reactflow-edge-stroke-opacity-hover * 0.2;
    }

    .react-flow__edge.selected & {
        stroke-opacity: $reactflow-edge-stroke-opacity-selected * 0.2;
    }

    .react-flow__edge.animated & {
        stroke-dasharray: unset;
        animation: unset;
    }
}

.react-flow__edgeupdater {
    opacity: 0;
    fill: currentcolor;
    stroke: currentcolor;

    &:hover {
        opacity: 0.05;
    }
}

.react-flow__edge-text {
    fill: currentcolor;
    stroke: none;
}

// Stroke types

path.react-flow__edge-path--stroke-solid {
    stroke-dasharray: unset;
}

path.react-flow__edge-path--stroke-dashed,
.react-flow__edge.animated path.react-flow__edge-path--stroke-dashed {
    stroke-dasharray: 5;
}

path.react-flow__edge-path--stroke-dotted,
.react-flow__edge.animated path.react-flow__edge-path--stroke-dotted {
    stroke-dasharray: 2;
}

path.react-flow__edge-path--stroke-double {
    filter: drop-shadow(1px 1px 1px currentcolor) drop-shadow(-1px -1px 1px currentcolor);
    stroke: #fff !important;
    stroke-opacity: 1 !important;
}

path.react-flow__edge-path--stroke-doubledashed {
    filter: drop-shadow(1px 1px 1px currentcolor) drop-shadow(-1px -1px 1px currentcolor);
    stroke: #fff !important;
    stroke-opacity: 1 !important;
    stroke-dasharray: 5;
}

// Intent states

g[class*="#{$eccgui}-intent--"] {
    color: var(--edge-intent-color);
}

g[class*="#{$eccgui}-intent--"] > path.react-flow__edge-path,
g[class*="#{$eccgui}-intent--"] > path.react-flow__edge-path-glow {
    stroke: var(--edge-intent-color);

    .react-flow__edge.selected & {
        stroke: var(--edge-intent-color);
    }
}

g.#{$eccgui}-intent--primary {
    --edge-intent-color: #{$eccgui-color-primary};
}

g.#{$eccgui}-intent--accent {
    --edge-intent-color: #{$eccgui-color-accent};
}

g.#{$eccgui}-intent--info {
    --edge-intent-color: #{$eccgui-color-info-text};
}

g.#{$eccgui}-intent--success {
    --edge-intent-color: #{$eccgui-color-success-text};
}

g.#{$eccgui}-intent--warning {
    --edge-intent-color: #{$eccgui-color-warning-text};
}

g.#{$eccgui}-intent--danger {
    --edge-intent-color: #{$eccgui-color-danger-text};
}

// Highlightning

path.react-flow__edge-path-highlight {
    filter: drop-shadow(2px -2px 1px var(--edge-highlight-default-color))
        drop-shadow(-2px 2px 1px var(--edge-highlight-alternate-color, var(--edge-highlight-default-color)));
    fill: none;
    stroke: #fff;
    stroke-opacity: 1;
    stroke-linecap: round;
}

.#{$eccgui}-graphviz__edge--highlight-default {
    --edge-highlight-default-color: #{$eccgui-color-accent};
    --edge-highlight-alternate-color: #{$eccgui-color-accent};
}

.#{$eccgui}-graphviz__edge--highlight-alternate {
    --edge-highlight-default-color: #{$eccgui-color-primary};
    --edge-highlight-alternate-color: #{$eccgui-color-primary};
}

.#{$eccgui}-graphviz__edge--highlight-default.#{$eccgui}-graphviz__edge--highlight-alternate {
    --edge-highlight-default-color: #{$eccgui-color-accent};
    --edge-highlight-alternate-color: #{$eccgui-color-primary};
}

// Type colors

.react-flow__edge-success {
    --#{$eccgui}-reactflow-node-color-default: #{$eccgui-color-success-text};
    --#{$eccgui}-reactflow-node-color-hover: #{$eccgui-color-success-text};
    --#{$eccgui}-reactflow-node-color-selected: #{$eccgui-color-success-text};
}

.react-flow__edge-warning {
    --#{$eccgui}-reactflow-node-color-default: #{$eccgui-color-warning-text};
    --#{$eccgui}-reactflow-node-color-hover: #{$eccgui-color-warning-text};
    --#{$eccgui}-reactflow-node-color-selected: #{$eccgui-color-warning-text};
}

.react-flow__edge-danger {
    --#{$eccgui}-reactflow-node-color-default: #{$eccgui-color-danger-text};
    --#{$eccgui}-reactflow-node-color-hover: #{$eccgui-color-danger-text};
    --#{$eccgui}-reactflow-node-color-selected: #{$eccgui-color-danger-text};
}

// Tools overlay

.#{$eccgui}-graphviz__edgetools-target {
    position: fixed;
    z-index: 1000;
    width: $eccgui-size-block-whitespace * 2;
    height: $eccgui-size-block-whitespace * 2;
    margin-top: -1 * $eccgui-size-block-whitespace;
}

.#{$eccgui}-graphviz__edgetools-content {
    min-width: $reactflow-node-basesize;
    max-width: $reactflow-node-basesize * 8;
    min-height: $reactflow-node-basesize;
    max-height: $reactflow-node-basesize * 13;
    padding: $eccgui-size-block-whitespace * 0.5;
}

// Arrows

.react-flow__arrowhead {
    polyline {
        fill: currentcolor;
        stroke: currentcolor;
        stroke-width: 1px;
        stroke-linecap: square;
        stroke-linejoin: miter;
        transform: scale(1.75, 0.75);
    }
}

// Custom label

.#{$eccgui}-graphviz__edge-label {
    --#{$eccgui}-reactflow-edge-label-color: currentcolor;
    --#{$eccgui}-reactflow-edge-label-color-background: #{$card-background-color};

    display: inline-flex;
    align-items: center;
    width: auto;
    max-width: 20rem;
    height: 0.5 * $reactflow-node-largesize;
    font-size: $reactflow-node-font-size;
    color: var(--#{$eccgui}-reactflow-edge-label-color, currentColor);
    background-color: var(--#{$eccgui}-reactflow-edge-label-color-background, #{$card-background-color});
    border: 0.5 * $reactflow-node-border-width solid transparent;
    border-color: var(--#{$eccgui}-reactflow-edge-label-color, currentColor);
    border-radius: $reactflow-node-border-radius;

    &.#{$eccgui}-graphviz__edge-label--loose {
        background-color: transparent;
        border: none;
    }

    &.#{$eccgui}-intent--primary {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-primary};
    }
    &.#{$eccgui}-intent--accent {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-accent};
    }
    &.#{$eccgui}-intent--success {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-success-text};
    }
    &.#{$eccgui}-intent--info {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-info-text};
    }
    &.#{$eccgui}-intent--warning {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-warning-text};
    }
    &.#{$eccgui}-intent--danger {
        --#{$eccgui}-reactflow-edge-label-color: #{$eccgui-color-danger-text};
    }
}
.#{$eccgui}-graphviz__edge-label--large {
    height: $reactflow-node-largesize;
}
.#{$eccgui}-graphviz__edge-label--fullwidth {
    width: 100%;
    max-width: none;
}
.#{$eccgui}-graphviz__edge-label__depiction {
    display: inline-flex;
    flex-grow: 0;
    flex-shrink: 0;
    margin-left: 2px;
    .#{$eccgui}-depiction__image {
        height: calc(#{0.5 * $reactflow-node-largesize} - 4px);

        .#{$eccgui}-graphviz__edge-label--large & {
            height: calc(#{$reactflow-node-largesize} - 4px);
        }
    }
}
.#{$eccgui}-graphviz__edge-label__text {
    flex-grow: 1;
    flex-shrink: 1;
    margin: 0 $eccgui-size-block-whitespace * 0.25;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;
    white-space: nowrap;

    .#{$eccgui}-graphviz__edge-label--fullwidth & {
        text-align: left;
    }
}
.#{$eccgui}-graphviz__edge-label__aux {
    flex-grow: 0;
    flex-shrink: 0;
    margin-right: $eccgui-size-block-whitespace * 0.25;
}
