@mixin nodetypestyles($type) {
    .react-flow__node-#{$type} {
        @include nodecoloring($type);
    }
}

@mixin nodecoloring($type) {
    .#{$eccgui}-graphviz__node {
        background-color: var(--#{$eccgui}-#{$type}-node-bright);
        border-color: var(--#{$eccgui}-#{$type}-node);
    }
    .#{$eccgui}-graphviz__node__extension--expanded {
        &.#{$eccgui}-graphviz__node__extension--slideout {
            border-color: var(--#{$eccgui}-#{$type}-node);
        }
    }
}

// Graph node types

.react-flow__node-graph {
    @include nodecoloring("graph");
    .#{$eccgui}-graphviz__node {
        border-style: double;
        border-width: 3 * $reactflow-node-border-width;
    }
    .#{$eccgui}-graphviz__node__extension--expanded {
        &.#{$eccgui}-graphviz__node__extension--slideout {
            right: -3 * $reactflow-node-border-width;
            left: -3 * $reactflow-node-border-width;
            border-style: double;
            border-width: 3 * $reactflow-node-border-width;
        }
    }
}

@include nodetypestyles("class");
@include nodetypestyles("instance");

.react-flow__node-property {
    @include nodecoloring("property");
    .#{$eccgui}-graphviz__node {
        border-style: dashed;
    }
    .#{$eccgui}-graphviz__node__extension--expanded {
        &.#{$eccgui}-graphviz__node__extension--slideout {
            border-style: dashed;
        }
    }
}

// Workflow node types

@include nodetypestyles("dataset");
@include nodetypestyles("linking");
@include nodetypestyles("transform");
@include nodetypestyles("task");
@include nodetypestyles("workflow");

// Linking node types

@include nodetypestyles("sourcepath");
@include nodetypestyles("targetpath");
@include nodetypestyles("transformation");
@include nodetypestyles("comparator");
@include nodetypestyles("aggregator");
