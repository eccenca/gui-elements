@use "sass:math";
@use "sass:color";

// own vars
$eccgui-size-textfield-height-small: $eccgui-size-block-whitespace * 2 !default;
$eccgui-size-textfield-height-regular: $eccgui-size-textfield-height-small * $eccgui-size-type-levelratio !default;
$eccgui-size-textfield-height-large: $eccgui-size-textfield-height-regular * $eccgui-size-type-levelratio *
    $eccgui-size-type-levelratio !default;
$eccgui-size-textfield-padding-horizontal-regular: $eccgui-size-inline-whitespace !default;
$eccgui-size-textfield-padding-horizontal-small: $eccgui-size-inline-whitespace * 0.5 !default;
$eccgui-typo-textfield-fontweight: $eccgui-font-weight-regular !default;
$eccgui-color-textfield-text: $eccgui-color-application-text !default;
$eccgui-color-textfield-background: white !default; // TODO define global var for it
// lib vars
$pt-input-height: $eccgui-size-textfield-height-regular; // !default;
$pt-input-height-large: $eccgui-size-textfield-height-large; // !default;
$pt-input-height-small: $eccgui-size-textfield-height-small; // !default;
$input-padding-horizontal: $eccgui-size-textfield-padding-horizontal-regular; // !default;
$input-small-padding: $eccgui-size-textfield-padding-horizontal-small; // !default;
$input-font-weight: $eccgui-typo-textfield-fontweight; // !default;
// $input-transition: box-shadow $pt-transition-duration $pt-transition-ease;
$input-color: $eccgui-color-textfield-text; // !default;
$input-color-disabled: rgba($eccgui-color-textfield-text, 0.39); // !default;
$input-placeholder-color: rgba($eccgui-color-textfield-text, 0.61); // !default;
$input-background-color: $eccgui-color-textfield-background; // !default;
// $input-background-color-disabled: rgba($light-gray1, 0.5) !default;
// $input-shadow-color-focus: $pt-intent-primary !default;
// $pt-input-box-shadow: inset border-shadow(0.15), inset 0 1px 1px rgba($black, $pt-drop-shadow-opacity) !default;
// $input-box-shadow-focus: inset 0 1px 1px rgba($black, $pt-drop-shadow-opacity) !default;
$input-button-height: math.div($eccgui-size-textfield-height-regular, $eccgui-size-type-levelratio); // !default;
$input-button-height-large: math.div($eccgui-size-textfield-height-large, $eccgui-size-type-levelratio); // !default;
$input-button-height-small: math.div($eccgui-size-textfield-height-small, $eccgui-size-type-levelratio); // !default;
// lib includes
@import "~@blueprintjs/core/src/components/forms/input-group";
@import "~@blueprintjs/core/src/components/forms/input";

// fixes

.#{$ns}-input-group {
    // fix for correct fill/fullWidth option
    display: inline-block;
    &.#{$ns}-fill {
        display: block;
    }

    .#{$ns}-input-action {
        // right element need to be adjusted for cases when there are no button with the same hight like the input
        height: 100%;
        max-height: $input-button-height-large;

        & > .#{eccgui}-icon {
            display: inline-flex;
            height: 100%;
            margin: 0 0.5 * $eccgui-size-block-whitespace;
        }
    }
}

// enhancements

@mixin intent-state-flash($state, $bgcolor, $mixratio: 24%) {
    @keyframes intent-state-flash-#{$state} {
        0% {
            background-color: color.mix($bgcolor, $eccgui-color-textfield-background, $mixratio);
        }

        39% {
            background-color: $bgcolor;
        }

        100% {
            background-color: color.mix($bgcolor, $eccgui-color-textfield-background, $mixratio);
        }
    }

    .#{$ns}-input-group.#{$ns}-intent-#{$state} & {
        background-color: color.mix($bgcolor, $eccgui-color-textfield-background, $mixratio);
        animation-name: intent-state-flash-#{$state};
    }
}

.#{$ns}-input {
    .#{$ns}-input-group[class*="#{$eccgui}-intent--"] & {
        animation-duration: 1s;
        animation-delay: 0.5s;
    }

    @include intent-state-flash("primary", $eccgui-color-info-background);
    @include intent-state-flash("success", $eccgui-color-success-background);
    @include intent-state-flash("warning", $eccgui-color-warning-background);
    @include intent-state-flash("danger", $eccgui-color-danger-background);

    .#{$ns}-input-group.#{$eccgui}-intent--info & {
        @include pt-input-intent($eccgui-color-info-text);
    }

    .#{$ns}-input-group.#{$eccgui}-intent--accent & {
        @include pt-input-intent($eccgui-color-primary);
    }

    .#{$ns}-input-group.#{$eccgui}-intent--neutral & {
        @include pt-input-intent($eccgui-color-workspace-text);
    }

    .#{$ns}-input-group.#{$eccgui}-intent--edited & {
        @include pt-input-intent($eccgui-color-info-text);

        color: $eccgui-color-info-text;
    }

    .#{$ns}-input-group.#{$eccgui}-intent--removed & {
        @include pt-input-intent($eccgui-color-danger-text);

        text-decoration: line-through $eccgui-color-danger-text 2px;
    }
}

.#{$eccgui}-textarea {
    width: 100%;

    &.#{$ns}-text-area-auto-resize {
        height: unset;
    }
}

.#{$eccgui}-textfield--justifyclearance {
    input[type="search"]::-ms-clear,
    input[type="search"]::-ms-reveal {
        display: none;
        width: 0;
        height: 0;
    }

    input[type="search"]::-webkit-search-decoration,
    input[type="search"]::-webkit-search-cancel-button,
    input[type="search"]::-webkit-search-results-button,
    input[type="search"]::-webkit-search-results-decoration {
        appearance: none;
    }
}
