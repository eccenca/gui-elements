// TODO: add vars and process them
$eccgui-size-typography-whitespace-regular: $eccgui-size-typo-base !default;

// lib requisites
@import "reset";

// basics

html {
    font-size: $eccgui-size-typo-base;
    line-height: $eccgui-size-typo-base-lineheight;
}

body {
    font-family: $eccgui-font-family-default;
    font-weight: $eccgui-font-weight-regular;
    text-rendering: optimizelegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

code {
    font-family: $eccgui-font-family-monospace;
    font-size: 0.9em;
}

strong {
    font-weight: $eccgui-font-weight-bold;
}

em {
    font-family: $eccgui-font-family-cursive;
    font-style: italic;
}

sup {
    vertical-align: super;
}

sub {
    vertical-align: sub;
}

a {
    color: $eccgui-color-accent;
}

mark {
    color: $eccgui-color-info-text !important;

    /*
        we need to use important keyword overwrite here to prevent problems with
        styles from other stylesheets we cannot control here
        TODO: need to reevaluated when it is not used together with MDL anymore
    */
    background-color: rgba($eccgui-color-info-background, 1) !important;
}

// HtmlContentBlock

.#{$eccgui}-typography__contentblock,
.#{$eccgui}-typography__text {
    line-height: $eccgui-size-typo-text-lineheight;
}

.#{$eccgui}-typography__contentblock.#{$eccgui}-typography--small {
    font-size: $eccgui-size-typo-caption;
    line-height: $eccgui-size-typo-caption-lineheight;
}

h1 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-headline;
        font-weight: $eccgui-font-weight-light;
        line-height: $eccgui-size-typo-headline-lineheight;
    }
}

h2 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-title;
        font-weight: $eccgui-font-weight-light;
        line-height: $eccgui-size-typo-title-lineheight;
    }
}

h3 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-subtitle;
        font-weight: $eccgui-font-weight-regular;
        line-height: $eccgui-size-typo-subtitle-lineheight;
    }
}

h4 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-text;
        font-weight: $eccgui-font-weight-bold;
        line-height: $eccgui-size-typo-text-lineheight;
    }
}

h5 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-caption;
        font-style: italic;
        font-weight: $eccgui-font-weight-bold;
        line-height: $eccgui-size-typo-caption-lineheight;
    }
}

h6 {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        font-size: $eccgui-size-typo-caption;
        font-weight: $eccgui-font-weight-bold;
        line-height: $eccgui-size-typo-caption-lineheight;
    }
}

ul {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        list-style: disc;
    }
}

ol {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        list-style: decimal;
    }
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
ul,
ol,
table {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        &:not(:last-child) {
            margin-bottom: $eccgui-size-block-whitespace;
        }
    }
}

li {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        margin-top: $eccgui-size-block-whitespace * 0.25;
        margin-bottom: $eccgui-size-block-whitespace * 0.25;
        margin-left: $eccgui-size-block-whitespace * 2;
    }
}

blockquote {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        margin: $eccgui-size-block-whitespace * 2;
        font-style: italic;

        &:last-child {
            margin-bottom: 0;
        }
    }
}

pre {
    .#{$eccgui}-typography__contentblock &,
    &.#{$eccgui}-typography__text {
        padding: $eccgui-size-block-whitespace * 0.5;
        overflow-x: auto;
        background-color: $eccgui-color-workspace-background;
    }
}

table {
    .#{$eccgui}-typography__contentblock & {
        @extend .#{$prefix}--data-table;
    }
}

.#{$eccgui}-typography__contentblock {
    audio,
    canvas,
    iframe,
    img,
    svg,
    video {
        max-width: 100%;
    }
}

// OverflowText

.#{$ns}-text-overflow-ellipsis,
.#{$eccgui}-typography__overflowtext,
.#{$eccgui}-typography__overflowtext--passdown * {
    // display: inherit;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    overflow-wrap: normal;
    white-space: nowrap;
    vertical-align: middle;
}

.#{$eccgui}-typography__overflowtext--inline {
    display: inline-block;

    &.#{$eccgui}-typography__overflowtext--passdown * {
        display: inline;
    }
}

.#{$eccgui}-typography__overflowtext--ellipsis-none {
    text-overflow: clip;
}

.#{$eccgui}-typography__overflowtext--ellipsis-reverse {
    text-align: left;
    text-overflow: ellipsis;
    direction: rtl;
    unicode-bidi: embed;

    &::after {
        /*
            hex value for &lrm;
            @see https://stackoverflow.com/questions/20798667/#comment98304322_42551367
        */
        content: "\200e";
    }

    &::before {
        /*
            hex value for &lrm;
            @see https://stackoverflow.com/questions/20798667/#comment98304322_42551367
        */
        content: "\200e";
    }
}

// helpers

.#{$eccgui}-typography--nooverflow {
    overflow: hidden;
}

.#{$eccgui}-typography--forcelinebreak {
    word-break: normal;
    overflow-wrap: anywhere;
}

.#{$eccgui}-typography--preventlinebreak {
    word-break: keep-all;
    white-space: nowrap;
}

.#{$eccgui}-typography--noscrollbarsonchildren * {
    overflow: visible;

    pre {
        width: fit-content;
    }
}

// white spaces
@each $whitespacePlace in ("margin", "padding") {
    @each $whitespaceDirection in ("top", "right", "bottom", "left") {
        @each $whitespaceSizeName,
            $whitespaceSizeValue
                in (
                    "tiny": $eccgui-size-typography-whitespace-regular * 0.25,
                    "small": $eccgui-size-typography-whitespace-regular * 0.5,
                    "regular": $eccgui-size-typography-whitespace-regular,
                    "large": $eccgui-size-typography-whitespace-regular * 1.5,
                    "xlarge": $eccgui-size-typography-whitespace-regular * 2
                )
        {
            .#{$eccgui}-typography__whitespace-#{$whitespacePlace}#{$whitespaceDirection}-#{$whitespaceSizeName} {
                #{$whitespacePlace}-#{$whitespaceDirection}: $whitespaceSizeValue;
            }
        }
    }
}
