name: "Release: Publish release candidate"

on:
  workflow_dispatch:
    branches:
      - "release/*"
    inputs:
      confirmation:
        description: 'Create release tag and publish package'
        required: true
        default: false
        type: boolean

jobs:
  publish-release-candidate:
    runs-on: ubuntu-latest

    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5.1
    - name: Allow only for release branch
      run: |
        if  [[ ${{ steps.branch-name.outputs.current_branch }} != release* ]] ;
        then
            echo "Only allowed to get triggered on release branches!"
            echo "You started it on '${{ steps.branch-name.outputs.current_branch }}'."
            exit 1
        fi
    - uses: actions/checkout@v2
    - name: Initialize mandatory git config
      # @see https://github.community/t/how-do-i-get-gh-username-based-on-actions-events/17882
      run: |
       git config user.name "${{ github.actor }}"
       git config user.email "${{ github.actor }}@users.noreply.github.com"
    - uses: actions/setup-node@v1
      with:
        node-version: '14'
    - name: Get version
      id: package-version
      run: echo "::set-output name=version::$(node -p -e "require('./package.json').version")"
    - name: Create version tag
      run: git tag -a v${{ steps.package-version.outputs.version }} -m "tag release candidate v${{ steps.package-version.outputs.version }}"
    - name: Publish release candidate
      run: |
        yarn install
        yarn publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Bump release candidate version in package.json
      id: bump-version
      run: |
        yarn version --no-git-tag-version --preid "rc" --prerelease
        git commit package.json --message "Bump release version to next release candidate ${{ steps.bump-version.outputs.version }}"
        echo "::set-output name=version::$(node -p -e "require('./package.json').version")"
    - name: Push tag and changes
      run: |
        git push
        git push v${{ steps.package-version.outputs.version }}
